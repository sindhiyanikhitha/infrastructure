{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "vpcName": {
      "Type":"String"
    },
    "vpcCidr" : {
      "Type":"String"
    },
    "vpcIdUnique": {
      "Type":"String"
    },
    "KeyPair": {
      "Default": "awskey",
      "Type": "String"
    },
    "pubSubnet1":{
      "Type":"String"
    },
    "pubSubnet1CIDR" : {
      "Type":"String"
    },
    "pubSubnet2":{
      "Type":"String"
    },
    "pubSubnet2CIDR" : {
      "Type":"String"
    },
    "pubSubnet3":{
      "Type":"String"
    },
    "pubSubnet3CIDR" : {
      "Type":"String"
    },
    "pvtSubnet1":{
      "Type":"String"
    },
    "pvtSubnet1CIDR":{
      "Type":"String"
    },
    "pvtSubnet2":{
      "Type":"String"
    },
    "pvtSubnet2CIDR":{
      "Type":"String"
    },
    "pvtSubnet3":{
      "Type":"String"
    },
    "pvtSubnet3CIDR":{
      "Type":"String"
    },
    "destinationCidrBlock" : {
      "Type":"String",
      "Default":"0.0.0.0/0"
    },
    "ImageID": {
      "Default": "ami-066809fd265495ca4",
      "Type": "String"
    },
    "EC2VolumeSize":{
      "Type":"String"
    },
    "RDSVolumeSize":{
      "Type":"String"
    },
    "DBUsername": {
      "Default": "admin",
      "Description": "Database Username",
      "Type": "String"
    },
    "DBPassword": {
      "Default": "test1234",
      "Description": "Database Password",
      "Type": "String"
    }
  },
  "Resources": {
    "MyVpc": {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" :{"Ref":"vpcCidr"},
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags" : [{"Key" : "Name", "Value": {
          "Ref": "vpcName"
        }}]
      }

    },
    "MyInternetGateway"   : {
      "Type" :"AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" :[{"Key":"Name","Value":"My Internet Gateway"}]
      },
      "DependsOn":"MyVpc"
    },
    "AttachGateway": {
      "Type":"AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId":{"Ref":"MyVpc"},
        "InternetGatewayId":{"Ref":"MyInternetGateway"}
      },
      "DependsOn":"MyVpc"
    },
    "PublicSubnet1":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pubSubnet1CIDR"},
        "MapPublicIpOnLaunch":"true",
        "AvailabilityZone": {
          "Fn::Select" : [
            "0",
            {"Fn::GetAZs":""}
          ]
        },
        "Tags":[{"Key":"Name","Value":"Public Subnet 1"}]
      },
      "DependsOn":"MyVpc"
    },
    "PublicSubnet2":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pubSubnet2CIDR"},
        "MapPublicIpOnLaunch":"true",
        "AvailabilityZone":{
          "Fn::Select":[
            "1",
            {"Fn::GetAZs":""}
          ]
        },
        "Tags":[{"Key":"Name","Value":"Public Subnet 2"}]
      },
      "DependsOn":"MyVpc"
    },
    "PublicSubnet3":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pubSubnet3CIDR"},
        "MapPublicIpOnLaunch":"true",
        "AvailabilityZone":{
          "Fn::Select":[
            "2",
            {"Fn::GetAZs":""}
          ]
        },
        "Tags":[{"Key":"Name","Value":"Public Subnet 3"}]
      },
      "DependsOn":"MyVpc"
    },
    "PrivateSubnet1":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pvtSubnet1CIDR"},
        "AvailabilityZone":{
          "Fn::Select":[
            "0",
            {"Fn::GetAZs":""}
          ]
        },
        "MapPublicIpOnLaunch":"false",
        "Tags":[{"Key":"Name","Value":"Private Subnet 1"}]
      },
      "DependsOn":"MyVpc"
    },
    "PrivateSubnet2":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pvtSubnet2CIDR"},
        "AvailabilityZone":{
          "Fn::Select":[
            "1",
            {"Fn::GetAZs":""}
          ]
        },
        "MapPublicIpOnLaunch":"false",
        "Tags":[{"Key":"Name","Value":"Private Subnet 2"}]
      },
      "DependsOn":"MyVpc"
    },
    "PrivateSubnet3":{
      "Type":"AWS::EC2::Subnet",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "CidrBlock":{"Ref":"pvtSubnet3CIDR"},
        "AvailabilityZone":{
          "Fn::Select":[
            "2",
            {"Fn::GetAZs":""}
          ]
        },
        "MapPublicIpOnLaunch":"false",
        "Tags":[{"Key":"Name","Value":"Private Subnet 3"}]
      },
      "DependsOn":"MyVpc"
    },
    "PublicRouteTable":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "Tags":[{"Key":"Name","Value":"Public Route Table"}]
      },
      "DependsOn":"MyVpc"
    },
    "PublicRoute":{
      "Type":"AWS::EC2::Route",
      "Properties":{
        "RouteTableId":{"Ref":"PublicRouteTable"},
        "DestinationCidrBlock":{"Ref":"destinationCidrBlock"},
        "GatewayId":{"Ref":"MyInternetGateway"}
      },
      "DependsOn":"AttachGateway"
    },
    "PublicSubnet1RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PublicRouteTable"},
        "SubnetId":{"Ref":"PublicSubnet1"}
      },
      "DependsOn":"PublicRouteTable"
    },
    "PublicSubnet2RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PublicRouteTable"},
        "SubnetId":{"Ref":"PublicSubnet2"}
      },
      "DependsOn":"PublicRouteTable"
    },
    "PublicSubnet3RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PublicRouteTable"},
        "SubnetId":{"Ref":"PublicSubnet3"}
      },
      "DependsOn":"PublicRouteTable"
    },
    "PrivateRouteTable":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"MyVpc"},
        "Tags":[{"Key":"Name","Value":"Private Route Table"}]
      },
      "DependsOn":"MyVpc"
    },
    "PrivateSubnet1RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRouteTable"},
        "SubnetId":{"Ref":"PrivateSubnet1"}
      },
      "DependsOn":"PrivateRouteTable"
    },
    "PrivateSubnet2RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRouteTable"},
        "SubnetId":{"Ref":"PrivateSubnet2"}
      },
      "DependsOn":"PrivateRouteTable"
    },
    "PrivateSubnet3RouteTableAssociation":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRouteTable"},
        "SubnetId":{"Ref":"PrivateSubnet3"}
      },
      "DependsOn":"PrivateRouteTable"
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80, SSH access via port 22",
        "GroupName": "application",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8081",
            "ToPort": "8081",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "MyVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "csye6225-webapp"
          }
        ]
      },
      "DependsOn":"MyVpc"
    },
    "DbSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security tag for db",
        "GroupName": "database",
        "SecurityGroupIngress": [
          {
            "SourceSecurityGroupId": {
              "Ref": "WebServerSecurityGroup"
            },
            "FromPort": 3306,
            "IpProtocol": "tcp",
            "ToPort": 3306
          }
        ],
        "VpcId": {
          "Ref": "MyVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "csye6225-rds"
          }
        ]
      },
      "DependsOn":"MyVpc"
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "DB Subnet Group",
        "SubnetIds": [
          {
            "Ref":"PrivateSubnet1"
          },
          {
            "Ref": "PrivateSubnet2"
          },
          {
            "Ref": "PrivateSubnet3"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public DB SubnetGroup"
          }
        ]
      }
    },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": "cloud",
        "DBInstanceClass": "db.t3.micro",
        "DBInstanceIdentifier": "cloud",
        "AllocatedStorage": {"Ref":"RDSVolumeSize"},
        "Engine": "MySQL",
        "EngineVersion": "5.7.25",
        "MasterUsername": {"Ref":"DBUsername"},
        "MasterUserPassword": {"Ref":"DBPassword"},
        "MultiAZ": "false",
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "PubliclyAccessible": "false",
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Ref": "DbSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "My SQL Database"
          }
        ]
      },
      "DependsOn":"MyVpc"
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IAMRole"
          }
        ]
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "ImageId": {
          "Ref": "ImageID"
        },
        "KeyName": {
          "Ref": "KeyPair"
        },
        "InstanceType": "t2.micro",
        "DisableApiTermination":false,
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeType": "gp2",
              "DeleteOnTermination": true,
              "VolumeSize": {"Ref":"EC2VolumeSize"}
            }
          }
        ],
        "SecurityGroupIds": [
          {
            "Ref": "WebServerSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -xe ",
                "sudo su",
                "cd /etc/profile.d",
                "touch envars.sh",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo export dburl=",
                      {
                        "Fn::GetAtt": [
                          "RDSInstance",
                          "Endpoint.Address"
                        ]
                      },
                      ">> /etc/profile.d/envars.sh\n"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo export springprofilesactive=aws >> /etc/profile.d/envars.sh"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo export springdatasourceusername=",
                      {
                        "Ref": "DBUsername"
                      },
                      ">> /etc/profile.d/envars.sh"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo export springdatasourcepassword=",
                      {
                        "Ref": "DBPassword"
                      },
                      ">> /etc/profile.d/envars.sh"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo export bucketname=",
                      {
                        "Ref": "S3Bucket"
                      },
                      ">> /etc/profile.d/envars.sh"
                    ]
                  ]
                },
                "sudo chmod 777 /etc/profile.d/envars.sh",
                "source /etc/profile.d/envars.sh",
                "systemctl enable tomcat.service",
                "systemctl start tomcat.service"
              ]
            ]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "csye6225-EC2"
          }
        ]
      },
      "DependsOn": "RDSInstance"
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "PublicAccessBlockConfiguration":{
          "BlockPublicAcls":false,
          "IgnorePublicAcls":false,
          "BlockPublicPolicy":true,
          "RestrictPublicBuckets":true
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "StandardIARule",
              "Prefix": "",
              "Status": "Enabled",
              "Transitions": [
                {
                  "TransitionInDays": 30,
                  "StorageClass": "STANDARD_IA"
                }
              ]
            }
          ]
        }
      }
    },
    "IAMPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "WebAppS3",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:List*",
                "s3:Put*",
                "s3:Get*",
                "s3:Delete*"
              ],
              "Resource": [
                {"Fn::Join":["",[ "arn:aws:s3:::",{"Ref": "S3Bucket"},"*"]]}
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IAMRole"
          }
        ]
      }
    },
    "IAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "RoleName": "EC2-CSYE6225"
      }
    }
  },
  "Outputs": {
    "VPC":{
      "Description":"The VPC ID to use for EC2 instance",
      "Value":{"Ref":"MyVpc"},
      "Export":{ "Name" : {"Ref":"vpcName"}}
    },
    "PublicSubnet1":{
      "Description":"The subnet ID to use for public web servers",
      "Value":{"Ref":"PublicSubnet1"},
      "Export":{ "Name" : {"Ref":"pubSubnet1"} }
    },
    "PublicSubnet2":{
      "Description":"The subnet ID to use for public web servers",
      "Value":{"Ref":"PublicSubnet2"},
      "Export":{ "Name" :{"Ref":"pubSubnet2"} }
    },
    "PublicSubnet3":{
      "Description":"The subnet ID to use for public web servers",
      "Value":{"Ref":"PublicSubnet3"},
      "Export":{ "Name" : {"Ref":"pubSubnet3"} }
    },
    "PrivateSubnet1":{
      "Description":"The private subnet ID to use for RDS",
      "Value":{"Ref":"PrivateSubnet1"},
      "Export":{"Name":{"Ref":"pvtSubnet1"}}
    },
    "PrivateSubnet2":{
      "Description":"The private subnet ID to use for RDS",
      "Value":{"Ref":"PrivateSubnet2"},
      "Export":{"Name":{"Ref":"pvtSubnet2"}}
    },
    "PrivateSubnet3":{
      "Description":"The private subnet ID to use for RDS",
      "Value":{"Ref":"PrivateSubnet3"},
      "Export":{"Name":{"Ref":"pvtSubnet3"}}
    },
    "EC2Instance": {
      "Description": "The EC2 instance for the application",
      "Value": {
        "Ref": "EC2Instance"
      },
      "Export": {
        "Name": "EC2Instance"
      }
    },
    "RDSInstance": {
      "Description": "The RDS instance for attachments",
      "Value": {
        "Ref": "RDSInstance"
      },
      "Export": {
        "Name": "RDSInstance"
      }
    },
    "S3Bucket": {
      "Description": "The S3 bucket to store attachments",
      "Value": {
        "Ref": "S3Bucket"
      },
      "Export": {
        "Name": "S3Bucket"
      }
    }
  }
}